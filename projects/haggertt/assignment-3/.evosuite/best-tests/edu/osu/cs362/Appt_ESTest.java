/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 19:30:07 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 11, 11, 45, " at ", " at ");
      String string0 = appt0.toString();
      assertEquals("\t11/11/45 at 12:0am , at ,  at \n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "", "");
      appt0.setStartDay(31);
      assertEquals(31, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt((-2581), (-2581), (-2581), (-2581), (-2581), "", "z?Q9>Aang=MJNp>S@&");
      boolean boolean0 = appt0.getValid();
      assertEquals(-2581, appt0.getStartYear());
      assertEquals(-2581, appt0.getStartHour());
      assertEquals("", appt0.getTitle());
      assertEquals(-2581, appt0.getStartMonth());
      assertFalse(boolean0);
      assertEquals("z?Q9>Aang=MJNp>S@&", appt0.getDescription());
      assertEquals(-2581, appt0.getStartDay());
      assertEquals(-2581, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(7, 7, 7, 7, 7, "", "");
      appt0.getTitle();
      assertEquals(7, appt0.getStartYear());
      assertEquals(7, appt0.getStartHour());
      assertTrue(appt0.getValid());
      assertEquals(7, appt0.getStartMonth());
      assertEquals(7, appt0.getStartDay());
      assertEquals(7, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt((-1014), (-1984), 11, 0, 45, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(0, int0);
      assertEquals(45, appt0.getStartYear());
      assertEquals(11, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-1984, appt0.getStartMinute());
      assertEquals(-1014, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(0, (-904), 547, (-904), (-904), "vO5", "vO5");
      int int0 = appt0.getStartMonth();
      assertEquals("vO5", appt0.getDescription());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals("vO5", appt0.getTitle());
      assertEquals(-904, appt0.getStartMinute());
      assertEquals(-904, appt0.getStartYear());
      assertEquals((-904), int0);
      assertEquals(547, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(23, 59, (-148), (-2143), 0, "V`2+", "V`2+");
      int int0 = appt0.getStartMinute();
      assertEquals(-2143, appt0.getStartMonth());
      assertEquals(23, appt0.getStartHour());
      assertEquals(-148, appt0.getStartDay());
      assertEquals("V`2+", appt0.getTitle());
      assertEquals("V`2+", appt0.getDescription());
      assertEquals(59, int0);
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt((-2163), (-2163), (-2163), (-2163), 109, "f _>`LgBd", ")");
      int int0 = appt0.getStartMinute();
      assertEquals(109, appt0.getStartYear());
      assertEquals(-2163, appt0.getStartMonth());
      assertEquals("f _>`LgBd", appt0.getTitle());
      assertEquals(-2163, appt0.getStartDay());
      assertEquals((-2163), int0);
      assertEquals(-2163, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(")", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt((-73), 1995, (-73), 1995, (-73), "FLay>_Qnf>~Pi)0k", "InvalidXGCRepresentation");
      int int0 = appt0.getStartHour();
      assertEquals(1995, appt0.getStartMonth());
      assertEquals(1995, appt0.getStartMinute());
      assertEquals("FLay>_Qnf>~Pi)0k", appt0.getTitle());
      assertEquals(-73, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals("InvalidXGCRepresentation", appt0.getDescription());
      assertEquals((-73), int0);
      assertEquals(-73, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, (String) null, "U:uTP<A&nM6K");
      int int0 = appt0.getStartDay();
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals("U:uTP<A&nM6K", appt0.getDescription());
      assertEquals("", appt0.getTitle());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, (-904), 547, (-904), (-904), "vO5", "vO5");
      assertEquals(547, appt0.getStartDay());
      
      appt0.setStartDay((-904));
      int int0 = appt0.getStartDay();
      assertEquals((-904), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(7, 7, 7, 7, 7, "", "");
      appt0.getDescription();
      assertTrue(appt0.getValid());
      assertEquals(7, appt0.getStartMonth());
      assertEquals(7, appt0.getStartYear());
      assertEquals(7, appt0.getStartHour());
      assertEquals(7, appt0.getStartDay());
      assertEquals(7, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt((-1938), (-1938), (-1938), (-1938), 579, "1697-02-01T00:00:00Z", (String) null);
      appt0.setDescription(" at ");
      assertEquals(" at ", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(1348, 1348, 1348, 1348, 1348, "00.b", "00.b");
      assertEquals("00.b", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals(1348, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(0, (-283), (-1), 2483, 2483, "", "");
      appt0.setTitle("PGyFd[N");
      assertEquals("PGyFd[N", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-800), (-800), (-800), (-800), (-800), "UTQ+bCBH]^FK-[_$X{", "UTQ+bCBH]^FK-[_$X{");
      String string0 = appt0.getTitle();
      assertEquals("UTQ+bCBH]^FK-[_$X{", string0);
      assertEquals(-800, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-800, appt0.getStartHour());
      assertEquals(-800, appt0.getStartYear());
      assertEquals(-800, appt0.getStartMinute());
      assertEquals("UTQ+bCBH]^FK-[_$X{", appt0.getDescription());
      assertEquals(-800, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(0, (-904), 547, (-904), (-904), "vO5", "vO5");
      int int0 = appt0.getStartDay();
      assertEquals(0, appt0.getStartHour());
      assertEquals("vO5", appt0.getDescription());
      assertEquals(-904, appt0.getStartMonth());
      assertEquals("vO5", appt0.getTitle());
      assertEquals(547, int0);
      assertEquals(-904, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-904, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 11, 11, 45, " at ", " at ");
      boolean boolean0 = appt0.getValid();
      assertEquals(45, appt0.getStartYear());
      assertEquals(" at ", appt0.getDescription());
      assertEquals(0, appt0.getStartHour());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(" at ", appt0.getTitle());
      assertEquals(11, appt0.getStartDay());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 11, 11, 45, " at ", " at ");
      int int0 = appt0.getStartHour();
      assertEquals(0, int0);
      assertEquals(11, appt0.getStartDay());
      assertEquals(45, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(" at ", appt0.getDescription());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(" at ", appt0.getTitle());
      assertTrue(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-1560), 59, 0, 59, 77, "--%M-%D%z", "--%M-%D%z");
      int int0 = appt0.getStartYear();
      assertEquals(59, appt0.getStartMonth());
      assertEquals("--%M-%D%z", appt0.getTitle());
      assertEquals(77, int0);
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals(-1560, appt0.getStartHour());
      assertEquals("--%M-%D%z", appt0.getDescription());
      assertEquals(59, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 11, 11, 45, " at ", " at ");
      int int0 = appt0.getStartMinute();
      assertTrue(appt0.getValid());
      assertEquals(45, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(" at ", appt0.getDescription());
      assertEquals(" at ", appt0.getTitle());
      assertEquals(0, int0);
      assertEquals(11, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 11, 11, 45, " at ", " at ");
      String string0 = appt0.getDescription();
      assertEquals(" at ", appt0.getTitle());
      assertEquals(0, appt0.getStartMinute());
      assertTrue(appt0.getValid());
      assertEquals(45, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(11, appt0.getStartDay());
      assertEquals(" at ", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 11, 11, 45, " at ", " at ");
      int int0 = appt0.getStartMonth();
      assertTrue(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals(" at ", appt0.getDescription());
      assertEquals(11, int0);
      assertEquals(11, appt0.getStartDay());
      assertEquals(" at ", appt0.getTitle());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(45, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "", "");
      String string0 = appt0.toString();
      assertEquals("\t12/12/12 at 12:12pm ,, \n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt((-1560), 59, 0, 59, 77, "--%M-%D%z", "--%M-%D%z");
      assertEquals("--%M-%D%z", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(4, 4, 441, 441, 441, "l(", "l(");
      assertEquals(441, appt0.getStartDay());
      
      appt0.setStartDay(4);
      assertEquals(441, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, 12, 12, (-1), 0, "ffAfhH?", "ffAfhH?");
      int int0 = appt0.getStartYear();
      assertEquals(0, int0);
      assertEquals("ffAfhH?", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals(12, appt0.getStartDay());
      assertEquals(-1, appt0.getStartMonth());
      assertEquals("ffAfhH?", appt0.getDescription());
      assertEquals(12, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 2530, 12, (-2013), "", "");
      int int0 = appt0.getStartYear();
      assertEquals((-2013), int0);
      assertEquals(12, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals(2530, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(23, 59, (-148), (-2143), 0, "V`2+", "V`2+");
      String string0 = appt0.toString();
      assertNull(string0);
      assertEquals(59, appt0.getStartMinute());
      assertEquals(-2143, appt0.getStartMonth());
      assertEquals(23, appt0.getStartHour());
      assertEquals("V`2+", appt0.getDescription());
      assertEquals(-148, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertEquals("V`2+", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(0, 1526, 0, 0, 0, ";9x|J<#o8R`", ";9x|J<#o8R`");
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(";9x|J<#o8R`", appt0.getDescription());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(";9x|J<#o8R`", appt0.getTitle());
      assertEquals(1526, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(45, 0, (-840), 0, 11, "\t11/23/45 at 12:0am , at ,  at \n", "\t11/23/45 at 12:0am , at ,  at \n");
      int int0 = appt0.getStartHour();
      assertEquals("\t11/23/45 at 12:0am , at ,  at \n", appt0.getTitle());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(45, int0);
      assertEquals(-840, appt0.getStartDay());
      assertEquals(11, appt0.getStartYear());
      assertEquals("\t11/23/45 at 12:0am , at ,  at \n", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 11, 11, 45, " at ", " at ");
      appt0.setStartMinute(0);
      assertEquals(0, appt0.getStartHour());
      assertEquals(11, appt0.getStartDay());
      assertTrue(appt0.getValid());
      assertEquals(45, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(" at ", appt0.getTitle());
      assertEquals(" at ", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 11, 11, 45, " at ", " at ");
      assertEquals(45, appt0.getStartYear());
      
      appt0.setStartYear(0);
      assertTrue(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt((-1560), 59, 0, 59, 77, "--%M-%D%z", "--%M-%D%z");
      appt0.setStartHour((-1560));
      assertEquals(59, appt0.getStartMinute());
      assertEquals(59, appt0.getStartMonth());
      assertEquals("--%M-%D%z", appt0.getTitle());
      assertEquals(77, appt0.getStartYear());
      assertEquals(0, appt0.getStartDay());
      assertEquals(-1560, appt0.getStartHour());
      assertEquals("--%M-%D%z", appt0.getDescription());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Appt appt0 = new Appt(0, (-904), 547, (-904), (-904), "vO5", "vO5");
      appt0.setStartMonth(45);
      assertEquals(45, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 1, 11, 11, "%Y-%M%z", "");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t11/1/11 at 11:11am ,%Y-%M%z, \n", string0);
  }
}
