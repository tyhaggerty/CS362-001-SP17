/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 11 17:56:47 GMT 2017
 */

package finalprojectB;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import finalprojectB.RegexValidator;
import finalprojectB.UrlValidator;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UrlValidator_ESTest extends UrlValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[1];
      UrlValidator urlValidator0 = new UrlValidator(stringArray0, 196L);
      // Undeclared exception!
      try { 
        urlValidator0.isValidScheme("mil");
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UrlValidator urlValidator0 = new UrlValidator();
      urlValidator0.countToken("is", "is");
      urlValidator0.isValid("");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UrlValidator urlValidator0 = UrlValidator.getInstance();
      // Undeclared exception!
      try { 
        urlValidator0.countToken((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "localhost";
      RegexValidator regexValidator0 = new RegexValidator("bd");
      UrlValidator urlValidator0 = new UrlValidator(stringArray0, regexValidator0, 4L);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[0];
      UrlValidator urlValidator0 = new UrlValidator(stringArray0);
      urlValidator0.isValidScheme("cv");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UrlValidator urlValidator0 = new UrlValidator((-7291L));
      urlValidator0.isValidPath("^([p{Alnum}-.]*)(:d*)?(.*)?");
      urlValidator0.isValidFragment("^([p{Alnum}-.]*)(:d*)?(.*)?");
      // Undeclared exception!
      try { 
        urlValidator0.isValidAuthority("^([p{Alnum}-.]*)(:d*)?(.*)?");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         assertThrownBy("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[0];
      RegexValidator regexValidator0 = new RegexValidator("gu");
      UrlValidator urlValidator0 = new UrlValidator(stringArray0, regexValidator0, 741L);
      urlValidator0.isValidQuery("gu");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UrlValidator urlValidator0 = new UrlValidator(1L);
      urlValidator0.countToken("rp*@", "^(.*)$");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UrlValidator urlValidator0 = new UrlValidator();
      String string0 = null;
      urlValidator0.isValidQuery((String) null);
      String string1 = "Yp3!Cj-oh>l7";
      // Undeclared exception!
      try { 
        urlValidator0.isValid("Yp3!Cj-oh>l7");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         assertThrownBy("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("ae", true);
      String string0 = null;
      UrlValidator urlValidator0 = new UrlValidator((String[]) null, regexValidator0, 0L);
      urlValidator0.isValidPath("|2<~uI4+q a7jv#");
      UrlValidator urlValidator1 = new UrlValidator(regexValidator0, 0L);
      UrlValidator urlValidator2 = new UrlValidator();
      // Undeclared exception!
      try { 
        urlValidator0.isValidAuthority("eu");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         assertThrownBy("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UrlValidator urlValidator0 = UrlValidator.getInstance();
      urlValidator0.isValidFragment((String) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("ae", false);
      UrlValidator urlValidator0 = new UrlValidator(regexValidator0, 0L);
      urlValidator0.isValidQuery("ae");
      urlValidator0.isValidAuthority((String) null);
      urlValidator0.isValidScheme((String) null);
      UrlValidator urlValidator1 = new UrlValidator(regexValidator0, 0L);
      urlValidator1.isValidPath("|2<~uI4+q a7jv#");
      urlValidator0.isValidFragment("");
      // Undeclared exception!
      try { 
        urlValidator1.isValid("ae");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         assertThrownBy("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "^([\\p{Alnum}\\-\\.]*)(:\\d*)?(.*)?";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("^([p{Alnum}-.]*)(:d*)?(.*)?", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal character range near index 12
         // ^([p{Alnum}-.]*)(:d*)?(.*)?
         //             ^
         //
         assertThrownBy("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cil";
      UrlValidator urlValidator0 = new UrlValidator(stringArray0, 196L);
      urlValidator0.isValidScheme("Cil");
      urlValidator0.isValidPath("Cil");
      urlValidator0.isValidScheme("Cil");
      // Undeclared exception!
      try { 
        urlValidator0.isValid("Cil");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         assertThrownBy("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UrlValidator urlValidator0 = new UrlValidator((-5674L));
      String string0 = "1)k6<";
      String string1 = "5D!8CXaV)-z^n40G";
      urlValidator0.countToken("1)k6<", "5D!8CXaV)-z^n40G");
      String string2 = "";
      urlValidator0.isValid((String) null);
      // Undeclared exception!
      try { 
        urlValidator0.countToken("", "");
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UrlValidator urlValidator0 = UrlValidator.getInstance();
      urlValidator0.isValidScheme("_bE~]!");
      urlValidator0.isValidPath("");
      urlValidator0.isValidScheme("ba");
      urlValidator0.isValidQuery("_bE~]!");
      urlValidator0.isValidPath("");
      // Undeclared exception!
      try { 
        urlValidator0.isValid("?UTv19+W");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         assertThrownBy("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "coop";
      stringArray0[1] = "htqp+";
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UrlValidator urlValidator0 = new UrlValidator();
      urlValidator0.isValid("");
      String string0 = "ci";
      urlValidator0.isValidPath("ci");
      urlValidator0.isValidPath((String) null);
      urlValidator0.isValidPath("ci");
      String string1 = "^:(\\d{1,3})$";
      urlValidator0.isValidPath("@");
      // Undeclared exception!
      try { 
        urlValidator0.isValidAuthority("#;V");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         assertThrownBy("java.util.regex.Matcher", e);
      }
  }
}
